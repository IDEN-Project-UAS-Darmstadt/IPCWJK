% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipcw_weights.R
\name{ipcw_weights}
\alias{ipcw_weights}
\title{Use a Kaplan-Meier estimator to estimate IPCW weights}
\usage{
ipcw_weights(data, tau, time_var = "t", status_var = "delta")
}
\arguments{
\item{data}{A data frame containing the survival data. Must include columns
for the observed time and event indicator.}

\item{tau}{Numeric scalar. The time horizon at which the survival
probability is to be estimated.}

\item{time_var}{Character. The name of the variable in \code{data}
representing the observed time to event or censoring.
Default is \code{"t"}.}

\item{status_var}{Character. The name of the variable in \code{data}
representing the event indicator (1 if event occurred, 0 if censored).
Default is \code{"delta"}.}
}
\value{
A numeric vector of IPCW weights, ordered as in the original
\code{data}. The weights are not normalized (are not scaled to sum to one).
}
\description{
\loadmathjax
Computes inverse probability of censoring weights (IPCW) for right-censored
survival data using the \code{pec::ipcw} function.
}
\details{
Predicting a survival probability for a right-censored event time outcome
at a specific time horizon \mjeqn{\tau}{tau} can be performed using binary
classifiers. For this purpose, the event time outcome is dichotomized into
a binary variable indicating whether a subject has survived up to time
\mjeqn{\tau}{tau} or not.
However, this approach can not account for subjects who are lost to
follow-up before time \mjeqn{\tau}{tau} and therefore before experiencing
the event of interest. This leads to worse discrimination and calibration
of the model \insertCite{Reps2021,Kvamme2023}{IPCWJK}.

Weighting observations by their Inverse Probability of Censoring has been
proposed to prevent bias
\insertCite{Vock2016,Ginestet2021,Blanche2023}{IPCWJK} and improve model
performance.

\mjdeqn{
\tilde{w}_i =
\left\lbrace
\begin{array}{ll}
 0, & c_i < \tau \wedge t^*_i \cr
 \frac{1}{\mathbb{P}(C > \tau \mid X = x_i)}, & \tau < c_i \wedge t^*_i \cr
 \frac{1}{\mathbb{P}(C > t_i \mid X = x_i)}, & t^*_i < c_i \wedge \tau
\end{array}
\right.
}{w_i_tilde = 0, if c_i < tau and t*_i; 1 / P(C > tau | X = x_i),
if tau < c_i and t*_i; 1 / P(C > t_i | X = x_i), if t*_i < c_i and tau }

The function uses the \code{pec::ipcw}\insertCite{pec}{IPCWJK} function to
compute the IPCW weights. They are not normalized (are \strong{not} scaled to sum
to one).
}
\examples{
data <- data.frame(
  t = c(5, 8, 12, 15, 20),
  delta = c(1, 0, 1, 0, 1)
)
w <- ipcw_weights(data, tau = 10)
}
\references{
\insertAllCited{}
}
\seealso{
Other helpers: 
\code{\link{deltamethod_from_model}()},
\code{\link{deltamethod_pred_function}()}
}
\concept{helpers}
